name: release

on:
  release:
    types: [published]

env:
  RUST_VERSION: "1.75.0"

jobs:
  release:
    runs-on: ${{ matrix.os }}
    permissions:
      contents: write
    env:
      ASSET: ""
      CARGO: cargo
    strategy:
      matrix:
        build:
          - freebsd-x86_64
          - linux-arm64-gnu
          - linux-arm64-musl
          - linux-x86_64-gnu
          - linux-x86_64-musl
          - macos-arm64
          - macos-x86_64
        include:
          - build: freebsd-x86_64
            os: ubuntu-22.04
            target: x86_64-unknown-freebsd
          - build: linux-arm64-gnu
            os: ubuntu-22.04
            target: aarch64-unknown-linux-gnu
          - build: linux-arm64-musl
            os: ubuntu-22.04
            target: aarch64-unknown-linux-musl
          - build: linux-x86_64-gnu
            os: ubuntu-22.04
            target: x86_64-unknown-linux-gnu
          - build: linux-x86_64-musl
            os: ubuntu-22.04
            target: x86_64-unknown-linux-musl
          - build: macos-x86_64
            os: macos-12
            target: x86_64-apple-darwin
          - build: macos-arm64
            os: macos-12
            target: aarch64-apple-darwin
    steps:
      - uses: actions/checkout@v3

      - name: Set up Rust
        uses: dtolnay/rust-toolchain@master
        with:
          toolchain: ${{ env.RUST_VERSION }}
          target: ${{ matrix.target }}

      - name: Install cross
        if: ${{ matrix.os == 'ubuntu-22.04' }}
        run: |
          cargo install --git https://github.com/cross-rs/cross
          echo CARGO=cross >> $GITHUB_ENV

      - name: Install homebrew dependencies
        if: ${{ matrix.os == 'macos-12' }}
        run: |
          NONINTERACTIVE=1 /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"
          brew install cmake meson nasm

      - name: Rust cargo build
        run: ${{ env.CARGO }} build --release --locked --target ${{ matrix.target }}

      - name: Build archive
        shell: bash
        run: |
          staging="imaged-${{ github.ref_name }}-${{ matrix.target }}"
          cp "target/${{ matrix.target }}/release/imaged" imaged
          tar czf "$staging.tar.gz" imaged
          echo "ASSET=$staging.tar.gz" >> $GITHUB_ENV

      - name: Upload release archive
        env:
          GH_TOKEN: ${{ github.token }}
        run: gh release upload ${{ github.ref_name }} ${{ env.ASSET }}
